version: "3.8"

services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: agriv-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./backend/models/trained:/app/models/trained
    environment:
      - PYTHONUNBUFFERED=1
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # AI Inference API Service
  ai-inference:
    build:
      context: ./ai_inference_api
      dockerfile: Dockerfile
    container_name: agriv-ai-inference
    ports:
      - "5000:5000"
    volumes:
      - ./ai_inference_api/models:/app/models
    environment:
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend Application
  frontend:
    build:
      context: ./agriv_ai
      dockerfile: Dockerfile
    container_name: agriv-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
      - ai-inference
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:3000/",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  app-network:
    driver: bridge
    name: agriv-app-network
